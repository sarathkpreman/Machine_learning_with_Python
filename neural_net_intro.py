# -*- coding: utf-8 -*-
"""Neural_net_Intro.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13JmBd_IxExYGYhbZEkgM69RKOFtFVV8c
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 2.x
#required libraries
import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt

#dataset
fashion_mnist = keras.datasets.fashion_mnist
#split & load the dataset
(train_images, train_labels),(test_images, test_labels) = fashion_mnist.load_data()

class_names = ["T-shirt/Top","Trousers","Pullover","Dress","Coat",
    "Sandal","Shirt","Sneaker","Bag","Angle","Boot"]

#Data preprocessing.
train_images = train_images / 255.0
test_images = test_images / 255.0

#model
model = keras.Sequential([
    keras.layers.Flatten(input_shape=(28, 28)),
    keras.layers.Dense(128, activation='relu'),
    keras.layers.Dense(10, activation='softmax')
])

#compile the model
model.compile(
    optimizer='adam',
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=2)

test_loss, test_acc = model.evaluate(test_images, test_labels, verbose=1)
print('Test accuracy :',test_acc)

predictions = model.predict(test_images)
print(class_names[np.argmax(predictions[20])])
plt.figure()
plt.imshow(test_images[29])
plt.colorbar()
plt.show()